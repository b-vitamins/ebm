[tool.poetry]
name = "ebm"
version = "0.1.0"
description = "A modern PyTorch library for energy-based machine learning models"
authors = ["Ayan Das <bvits@riseup.net>"]
readme = "README.md"
homepage = "https://github.com/yourusername/ebm"
repository = "https://github.com/yourusername/ebm"
documentation = "https://ebm.readthedocs.io"
keywords = ["machine-learning", "deep-learning", "pytorch", "rbm", "energy-based-models"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed"
]
license = "MIT"
packages = [{include = "ebm"}]

[tool.poetry.dependencies]
python = "^3.11"
torch = ">=2.0.0"
numpy = ">=1.24.0"
matplotlib = ">=3.6.0"
tqdm = ">=4.65.0"
pydantic = ">=2.0.0"
structlog = ">=23.0.0"
torchvision = ">=0.15.0"
typing-extensions = ">=4.5.0"
rich = {version = ">=13.0.0", optional = true}

[tool.poetry.group.viz]
optional = true

[tool.poetry.group.viz.dependencies]
seaborn = ">=0.12.0"
plotly = ">=5.14.0"
pillow = ">=9.4.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.0"
pytest-cov = ">=4.0.0"
pytest-xdist = ">=3.2.0"
black = ">=23.0.0"
isort = ">=5.12.0"
flake8 = ">=6.0.0"
flake8-docstrings = ">=1.7.0"
mypy = ">=1.0.0"
pre-commit = ">=3.0.0"
ipython = ">=8.10.0"
jupyter = ">=1.0.0"
nbconvert = ">=7.2.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = ">=6.0.0"
sphinx-rtd-theme = ">=1.2.0"
sphinx-autodoc-typehints = ">=1.22.0"
nbsphinx = ">=0.8.0"
myst-parser = ">=1.0.0"

[tool.poetry.group.extras]
optional = true

[tool.poetry.group.extras.dependencies]
wandb = ">=0.14.0"
tensorboard = ">=2.12.0"
scikit-learn = ">=1.2.0"
pandas = ">=1.5.0"
ipywidgets = ">=8.0.0"
pyyaml = ">=6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Common directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
known_third_party = ["torch", "numpy", "matplotlib", "tqdm", "pydantic", "structlog"]
known_first_party = ["ebm"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
strict_equality = true
strict_concatenate = true
ignore_missing_imports = true
pretty = true
show_error_codes = true
show_error_context = true
show_column_numbers = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "seaborn.*",
    "tqdm.*",
    "torchvision.*",
    "structlog.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--tb=short",
    "--cov=ebm",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks integration tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["ebm"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:"
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused

[tool.ruff.isort]
known-third-party = ["torch", "numpy", "matplotlib", "tqdm", "pydantic", "structlog"]

[tool.bandit]
tests = ["B201", "B301"]
skips = ["B101", "B601"]